{
  "name": "api",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "MIT",
  "type": "commonjs",
  "lint-staged": {
    "**/*": "prettier --write --ignore-unknown"
  },
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "export NODE_ENV=production&& nest start",
    "start:dev": "export NODE_ENV=development&& nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,test}/**/*.ts\" --fix",
    "lint:fix": "eslint -c ./eslint.config.mjs \"{src,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:unit": "jest --testPathPatterns='^(?!.*\\.integration\\.spec\\.ts$).*\\.spec\\.ts$'",
    "test:integration": "jest --testPathPatterns='\\.integration\\.spec\\.ts$'",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "rm -rf dist && jest --config ./test/jest-e2e.json",
    "test:e2e:docker": "rm -rf dist && docker-compose -f docker-compose.e2e.yml --env-file ./.test.env up --exit-code-from app",
    "prepare": "husky",
    "typeorm": "export NODE_ENV=production&& ts-node ./node_modules/typeorm/cli.js -d ./src/common/config/ormconfig.ts",
    "migration:create": "typeorm-ts-node-commonjs migration:create",
    "migration:generate": "npm run typeorm migration:generate",
    "migration:show": "npm run typeorm migration:show",
    "migration:run": "npm run build && npm run typeorm migration:run",
    "migration:revert": "npm run typeorm migration:revert",
    "seed": "npm run build && cp src/scripts/seeds/data.json dist/scripts/seeds/ && node dist/scripts/seeds/seed.js",
    "seed:docker": "docker exec -it cloudfence_poc_app_g npm run seed",
    "seed:local": "npm run build && cp src/scripts/seeds/data.json dist/scripts/seeds/ && node dist/scripts/seeds/seed.js"
  },
  "dependencies": {
    "@apollo/server": "^4.12.2",
    "@elastic/elasticsearch": "^8.12.0",
    "@nestjs/apollo": "^13.1.0",
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/common": "^11.1.6",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.6",
    "@nestjs/graphql": "^13.1.0",
    "@nestjs/platform-express": "^11.1.6",
    "@nestjs/typeorm": "^11.0.0",
    "cache-manager": "^7.1.1",
    "cache-manager-ioredis": "^2.1.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "graphql": "^16.11.0",
    "graphql-type-json": "^0.3.2",
    "i": "^0.3.7",
    "ioredis": "^5.7.0",
    "npm": "^11.5.2",
    "pg": "^8.16.3",
    "reflect-metadata": "^0.2.2",
    "rimraf": "^6.0.1",
    "rxjs": "^7.8.2",
    "typeorm": "^0.3.25"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@eslint/js": "^9.33.0",
    "@nestjs/cli": "^11.0.10",
    "@nestjs/schematics": "^11.0.7",
    "@nestjs/testing": "^11.1.6",
    "@trivago/prettier-plugin-sort-imports": "^5.2.2",
    "@types/bcrypt": "^6.0.0",
    "@types/cache-manager-ioredis": "^2.0.7",
    "@types/express": "^5.0.3",
    "@types/jest": "30.0.0",
    "@types/node": "^24.2.1",
    "@types/supertest": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "^8.39.1",
    "@typescript-eslint/parser": "^8.39.1",
    "eslint": "^9.33.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "globals": "^16.3.0",
    "husky": "^9.1.7",
    "jest": "^30.0.5",
    "pg-mem": "^3.0.5",
    "prettier": "^3.6.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.1",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "5.9.2"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": [
        "ts-jest",
        "@swc/jest"
      ]
    },
    "moduleDirectories": [
      "node_modules",
      "src"
    ],
    "moduleNameMapper": {
      "./src/index-minimal": "./src/index-minimal",
      "^src/(.*)$": "<rootDir>/src/$1"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "coverage",
    "testEnvironment": "node"
  }
}
